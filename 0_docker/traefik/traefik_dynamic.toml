[http]
  ################################################################
  # Dashboard secure
  ################################################################
  # create router for api
  [http.routers.api_router]
    entryPoints = ["traefik"]
    service = "api@internal"
    rule = "PathPrefix(`/api`)"
    middlewares = ["authbasic"]
  # create router for dashboard
  [http.routers.dashboard_router]
    entryPoints = ["traefik"]
    service = "dashboard@internal"
    rule = "PathPrefix(`/`)"
    middlewares = ["authbasic"]
  # create router for ping allowed without tls throught 80 and 443 ports
  [http.routers.ping_router]
    entryPoints = ["traefik"]
    service = "ping@internal"
    rule = "PathPrefix(`/ping`)"


  ################################################################
  # Middleware
  ################################################################
  [http.middlewares]
    # create middleware to enable basic authentication (htpasswd -nB adm)
    [http.middlewares.authbasic.basicAuth]
      users=[
       "admin:$2y$05$m/DNEUenlOKATbB8EXjbbOZN1uDzuqnS/Fj0NRh5GMiJS8lPUjIEG"
      ]
    # create middleware to enable tls redirect scheme
    [http.middlewares.tls_middleware.redirectScheme]
      scheme = "https"
      permanent = true

    # create middleware to enable tls redirect scheme
    [http.middlewares.sec_headers_middleware.headers]
      # Deny page loaded in an iframe
      frameDeny = true
      # XSS Limit attacks
      browserXssFilter = true
      # Browser not detect mime type to limit DBD Attacks
      contentTypeNosniff = true

      # Policies Headers
      contentSecurityPolicy = "script-src 'self'; img-src 'self'"
      referrerPolicy = "same-origin"
      featurePolicy = "vibrate 'self'; geolocation 'self'; midi 'self'; notifications 'self'; push 'self'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'self'; fullscreen 'self'"

      #HSTS
      forceSTSHeader = true
      stsIncludeSubdomains = true
      stsPreload = true
      stsSeconds = 31536000

[tls]
  [tls.stores]
    [tls.stores.default]
      [tls.stores.default.defaultCertificate]
        certFile = "/srv/certs/server-cert.pem"
        keyFile  = "/srv/certs/server-key.pem"
  [[tls.certificates]]
    certFile = "/srv/certs/server-cert.pem"
    keyFile = "/srv/certs/server-key.pem"
    stores = ["default"]
